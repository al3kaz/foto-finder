{"version":3,"sources":["redux/actualPage/actualPage.types.js","redux/actualPage/actualPage.actions.js","components/searchBar/searchBar-component.jsx","pages/homePage/homePage-component.jsx","redux/photo/photo.types.js","components/with-spinner/with-spinner.style.js","components/with-spinner/with-spinner.component.jsx","components/photo/photo.component.jsx","components/photosList/photoList.component.jsx","components/photosListOverview/photosListOverview.component.jsx","redux/photo/photos.actions.js","pages/searchOverviw/SearchOverview-component.jsx","App.js","reportWebVitals.js","redux/photo/photos.reducer.js","redux/actualPage/actualPage.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["ActualPageTypes","setPage","page","type","payload","connect","dispatch","withRouter","history","unsplash","Unsplash","accessKey","useState","inputValue","setInputValue","suggests","setSuggests","useEffect","length","search","photos","then","toJson","data","results","suggestions","filter","suggest","description","slice","map","className","onClick","push","id","catch","err","console","log","onSubmit","e","preventDefault","alert","placeholder","location","pathname","replace","value","onChange","target","HomePage","PhotoTypes","SpinnerOverlay","styled","div","SpinnerContainer","WithSpinner","WrappedComponent","isLoading","otherProps","Photo","urlSmall","urlBig","user","alt","isOpen","setIsOpen","handleClick","src","open","state","photo","currentPhotos","imgs","img","urls","small","regular","username","alt_description","setPhotos","phrase","useParams","loading","setLoading","totalPage","setTotalPage","PhotoListWithSpinner","photoList","total_pages","disabled","SearchOverview","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","photosReducer","action","pageReducer","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2c936bc.chunk.js","sourcesContent":["export const ActualPageTypes = {\r\n   SET_PAGE: 'SET_PAGE'\r\n}","import {ActualPageTypes} from './actualPage.types'\r\n\r\nexport const setPage = page => ({\r\n   type: ActualPageTypes.SET_PAGE,\r\n   payload: page\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { setPage } from '../../redux/actualPage/actualPage.actions';\r\n\r\nimport Unsplash, { toJson } from 'unsplash-js';\r\n\r\nimport './searchBar-styles.scss';\r\n\r\nconst SearchBar = ({ history, setPage }) => {\r\n\r\n   const unsplash = new Unsplash({\r\n      accessKey: \"W_KPDO6kGppQIVNA8bvsJH3uwiwPe8Go0Bouij4qyqg\"\r\n   });\r\n\r\n   const [inputValue, setInputValue] = useState(\"\")\r\n   const [suggests, setSuggests] = useState(\"\")\r\n\r\n   const handleChange = (e) => {\r\n      setInputValue(e.target.value)\r\n   }\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      setInputValue(\"\")\r\n      setPage(1)\r\n      if (inputValue === \"\") alert(\"put some value\")\r\n      else { history.push(`/${inputValue}`); }\r\n   }\r\n\r\n   useEffect(() => {\r\n      if (inputValue.length >= 3) {\r\n         unsplash.search.photos(`${inputValue}`, 1, 30)\r\n            .then(toJson)\r\n            .then(data => {\r\n               if (data.results) {\r\n                  const suggestions = data.results\r\n                     .filter(suggest => suggest.description != null && suggest.description !== \"\")\r\n                     .slice(0, 5)\r\n                     .map(suggest => (\r\n                        <div className=\"suggest\" key={suggest.id} onClick={() => {\r\n                           history.push(`/${suggest.description}`);\r\n                           setInputValue(\"\")\r\n                           setPage(1)\r\n                        }}> {suggest.description}</div>\r\n                     ));\r\n                  setSuggests(suggestions.length > 0 ? suggestions : <div>no seggestion</div>);\r\n               }\r\n            })\r\n            .catch(err => {\r\n               console.log(err)\r\n            });\r\n      } else {\r\n         setSuggests([])\r\n      }\r\n   }, [inputValue])\r\n\r\n   return (\r\n      <div className=\"search-bar-container\">\r\n         <form className=\"form-container\" onSubmit={handleSubmit}>\r\n            <input\r\n               className=\"input-style\"\r\n               placeholder={history.location.pathname === \"/\" ? \"Search\" : history.location.pathname.replace('/', '')}\r\n               type=\"text\"\r\n               value={inputValue}\r\n               onChange={handleChange}\r\n            />\r\n         </form>\r\n         {inputValue.length >= 3 &&\r\n            <div className=\"suggestions\">\r\n               {suggests}\r\n            </div>}\r\n      </div>\r\n   );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   setPage: page => dispatch(setPage(page)),\r\n})\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(SearchBar));","import React from 'react';\r\n\r\nimport SearchBar from '../../components/searchBar/searchBar-component';\r\n\r\nimport './homePage-styles.scss';\r\n\r\nconst HomePage = () => {\r\n\r\n   return (\r\n      <div className=\"home-page-container\">\r\n         <SearchBar />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default HomePage;","export const PhotoTypes = {\r\n   SET_PHOTOS: 'SET_PHOTOS'\r\n}","import styled from 'styled-components';\r\n\r\nexport const SpinnerOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(195, 195, 195, 0.6);\r\n  border-radius: 50%;\r\n  border-top-color: white;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.style';\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n   return isLoading ? (\r\n      <SpinnerOverlay>\r\n         <SpinnerContainer />\r\n      </SpinnerOverlay>\r\n   ) :\r\n      <WrappedComponent {...otherProps} />\r\n\r\n};\r\n\r\nexport default WithSpinner;","import React, { useState } from 'react';\r\n\r\nimport './photo.styles.scss';\r\n\r\nconst Photo = ({ urlSmall, urlBig, user, alt, description, location }) => {\r\n\r\n   const [isOpen, setIsOpen] = useState(false)\r\n\r\n   const handleClick = () => {\r\n      setIsOpen(!isOpen)\r\n   }\r\n\r\n   return (\r\n      <div className='photo-container'>\r\n         <img className='photo' src={urlSmall} alt={alt} onClick={handleClick} />\r\n\r\n         {isOpen &&\r\n            (<dialog className='dialog-container' open onClick={handleClick}>\r\n               <img className='dialog-container-img' src={urlBig} alt={alt} />\r\n               <h3 className='dialog-container-title'>author: {user}</h3>\r\n               {description ? <p className='dialog-container-title'>{description}</p> : null}\r\n               {location ? <p className='dialog-container-title'>{location}</p> : null}\r\n            </dialog>)}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Photo;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Photo from '../photo/photo.component';\r\n\r\nimport './photoList.styles.scss';\r\n\r\nconst photoListWithSpinner = ({ photos }) => {\r\n\r\n   const imgs = photos.results.map(img =>\r\n      <Photo\r\n         key={img.id}\r\n         urlSmall={img.urls.small}\r\n         urlBig={img.urls.regular}\r\n         user={img.user.username}\r\n         location={img.user.location}\r\n         alt={img.alt_description}\r\n         description={img.description}\r\n      />)\r\n\r\n   return (\r\n      <div className=\"photos-list-container\">\r\n         {imgs}\r\n      </div>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   photos: state.photo.currentPhotos,\r\n})\r\n\r\nexport default connect(mapStateToProps)(photoListWithSpinner);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams, withRouter } from 'react-router-dom'\r\n\r\nimport { setPhotos } from '../../redux/photo/photos.actions';\r\nimport { setPage } from '../../redux/actualPage/actualPage.actions';\r\n\r\nimport SearchBar from '../searchBar/searchBar-component';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport photoList from '../photosList/photoList.component';\r\n\r\nimport Unsplash, { toJson } from 'unsplash-js';\r\n\r\nimport './photosListOverview.styles.scss';\r\n\r\nconst PhotosList = ({ setPhotos, page, setPage }) => {\r\n\r\n   const unsplash = new Unsplash({\r\n      accessKey: \"W_KPDO6kGppQIVNA8bvsJH3uwiwPe8Go0Bouij4qyqg\"\r\n   });\r\n\r\n   const { phrase } = useParams();\r\n\r\n   const [loading, setLoading] = useState(true);\r\n   const [totalPage, setTotalPage] = useState(null);\r\n\r\n   const PhotoListWithSpinner = WithSpinner(photoList);\r\n\r\n   useEffect(() => {\r\n      unsplash.search.photos(`${phrase}`, page, 30)\r\n         .then(toJson)\r\n         .then(data => {\r\n            setTotalPage(data.total_pages);\r\n            setPhotos(data);\r\n            setLoading(false);\r\n         });\r\n   }, [phrase, page])\r\n\r\n   const handleNextPage = () => {\r\n      setPage(page + 1)\r\n   }\r\n\r\n   const handlePrevPage = () => {\r\n      setPage(page - 1)\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <SearchBar />\r\n\r\n         <div div className=\"pagination-container\">\r\n            <button disabled={page <= 1} className=\"page-button\" onClick={handlePrevPage}>prev </button>\r\n            <div className=\"page-button\">{page} of {totalPage}</div>\r\n            <button disabled={totalPage === page} className=\"page-button\" onClick={handleNextPage}>next </button>\r\n         </div>\r\n\r\n         <PhotoListWithSpinner isLoading={loading} />\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   page: state.page.page,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   setPhotos: photo => dispatch(setPhotos(photo)),\r\n   setPage: page => dispatch(setPage(page)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(PhotosList));","import {PhotoTypes} from './photo.types'\r\n\r\nexport const setPhotos = photo => ({\r\n   type: PhotoTypes.SET_PHOTOS,\r\n   payload: photo\r\n});","import React from 'react';\r\n\r\nimport PhotosListOverview from '../../components/photosListOverview/photosListOverview.component';\r\n\r\nconst SearchOverview = () => {\r\n   return (<div className=\"search-overview\">\r\n      <PhotosListOverview />\r\n   </div>);\r\n}\r\n\r\nexport default SearchOverview;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\n\nimport HomePage from './pages/homePage/homePage-component';\nimport SearchOverview from './pages/searchOverviw/SearchOverview-component'\n\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={HomePage}/>\n        <Route exact path=\"/:phrase\" component={SearchOverview}/>\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {PhotoTypes} from './photo.types'\r\n\r\nconst INITIAL_STATE = {\r\n   currentPhotos: []\r\n}\r\n\r\nconst photosReducer = (state = INITIAL_STATE, action) => {\r\n   switch (action.type) {\r\n      case PhotoTypes.SET_PHOTOS:\r\n         return {\r\n            ...state,\r\n            currentPhotos: action.payload\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default photosReducer;","import {ActualPageTypes} from './actualPage.types'\r\n\r\nconst INITIAL_STATE = {\r\n   page: 1\r\n}\r\n\r\nconst pageReducer = (state = INITIAL_STATE, action) => {\r\n   switch (action.type) {\r\n      case ActualPageTypes.SET_PAGE:\r\n         return {\r\n            ...state,\r\n            page: action.payload\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default pageReducer;","import { combineReducers } from 'redux';\r\n\r\nimport photosReducer from './photo/photos.reducer'\r\nimport pageReducer from './actualPage/actualPage.reducer'\r\n\r\n\r\nexport default combineReducers({\r\n   photo: photosReducer,\r\n   page: pageReducer\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}